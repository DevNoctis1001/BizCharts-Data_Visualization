import React from 'react';

import createPlot from '../createPlot';

import { default as _Line, LineConfig } from '@antv/g2plot/lib/plots/line';
import { default as _Treemap, TreemapConfig } from '@antv/g2plot/lib/plots/treemap';
import { default as _StepLine, StepLineConfig } from '@antv/g2plot/lib/plots/step-line';
import { default as _Bar, BarConfig } from '@antv/g2plot/lib/plots/bar';
import { default as _StackedBar, StackedBarConfig } from '@antv/g2plot/lib/plots/stacked-bar';
import { default as _GroupedBar, GroupedBarConfig } from '@antv/g2plot/lib/plots/grouped-bar';
import { default as _PercentStackedBar, PercentStackedBarConfig } from '@antv/g2plot/lib/plots/percent-stacked-bar';
import { default as _RangeBar, RangeBarConfig } from '@antv/g2plot/lib/plots/range-bar';
import { default as _Area, AreaConfig } from '@antv/g2plot/lib/plots/area';
import { default as _StackedArea, StackedAreaConfig } from '@antv/g2plot/lib/plots/stacked-area';
import { default as _PercentStackedArea, PercentStackedAreaConfig } from '@antv/g2plot/lib/plots/percent-stacked-area';
import { default as _Column, ColumnConfig } from '@antv/g2plot/lib/plots/column';
import { default as _GroupedColumn, GroupedColumnConfig } from '@antv/g2plot/lib/plots/grouped-column';
import { default as _StackedColumn, StackedColumnConfig } from '@antv/g2plot/lib/plots/stacked-column';
import { default as _RangeColumn, RangeColumnConfig } from '@antv/g2plot/lib/plots/range-column';
import { default as _PercentStackedColumn, PercentStackedColumnConfig } from '@antv/g2plot/lib/plots/percent-stacked-column';
import { default as _Pie, PieConfig } from '@antv/g2plot/lib/plots/pie';
import { default as _DensityHeatmap, DensityHeatmapConfig } from '@antv/g2plot/lib/plots/density-heatmap';
import { default as _Heatmap, HeatmapConfig } from '@antv/g2plot/lib/plots/heatmap';
import { default as _WordCloud, WordCloudConfig } from '@antv/g2plot/lib/plots/word-cloud';
import { default as _Rose, RoseConfig } from '@antv/g2plot/lib/plots/rose';
import { default as _Funnel, FunnelConfig } from '@antv/g2plot/lib/plots/funnel';
import { default as _StackedRose, StackedRoseConfig } from '@antv/g2plot/lib/plots/stacked-rose';
import { default as _GroupedRose, GroupedRoseConfig } from '@antv/g2plot/lib/plots/grouped-rose';
import { default as _Radar, RadarConfig } from '@antv/g2plot/lib/plots/radar';
import { default as _Liquid, LiquidConfig } from '@antv/g2plot/lib/plots/liquid';
import { default as _Histogram, HistogramConfig } from '@antv/g2plot/lib/plots/histogram';
import { default as _Density, DensityConfig } from '@antv/g2plot/lib/plots/density';
import { default as _Donut, DonutConfig } from '@antv/g2plot/lib/plots/donut';
import { default as _Waterfall, WaterfallConfig } from '@antv/g2plot/lib/plots/waterfall';
import { default as _Scatter, ScatterConfig } from '@antv/g2plot/lib/plots/scatter';
import { default as _Bubble, BubbleConfig } from '@antv/g2plot/lib/plots/bubble';
import { default as _Bullet, BulletConfig } from '@antv/g2plot/lib/plots/bullet';
import { default as _Calendar, CalendarConfig } from '@antv/g2plot/lib/plots/calendar';
import { default as _Gauge, GaugeConfig } from '@antv/g2plot/lib/plots/gauge';
import { default as _FanGauge, FanGaugeConfig } from '@antv/g2plot/lib/plots/fan-gauge';
import { default as _MeterGauge, MeterGaugeConfig } from '@antv/g2plot/lib/plots/meter-gauge';


export const Line = createPlot<LineConfig>(_Line, 'Line');
export const Treemap = createPlot<TreemapConfig>(_Treemap, 'Treemap');
export const StepLine = createPlot<StepLineConfig>(_StepLine, 'StepLine');
export const Bar = createPlot<BarConfig>(_Bar, 'Bar');
export const StackedBar = createPlot<StackedBarConfig>(_StackedBar, 'StackedBar');
export const GroupedBar = createPlot<GroupedBarConfig>(_GroupedBar, 'GroupedBar');
export const PercentStackedBar = createPlot<PercentStackedBarConfig>(_PercentStackedBar, 'PercentStackedBar');
export const RangeBar = createPlot<RangeBarConfig>(_RangeBar, 'RangeBar');
export const Area = createPlot<AreaConfig>(_Area, 'Area');
export const StackedArea = createPlot<StackedAreaConfig>(_StackedArea, 'StackedArea');
export const PercentStackedArea = createPlot<PercentStackedAreaConfig>(_PercentStackedArea, 'PercentStackedArea');
export const Column = createPlot<ColumnConfig>(_Column, 'Column');

export const GroupedColumn = createPlot<GroupedColumnConfig>(_GroupedColumn, 'GroupedColumn');
export const StackedColumn = createPlot<StackedColumnConfig>(_StackedColumn, 'StackedColumn');

export const RangeColumn = createPlot<RangeColumnConfig>(_RangeColumn, 'RangeColumn');
export const PercentStackedColumn = createPlot<PercentStackedColumnConfig>(_PercentStackedColumn, 'PercentStackedColumn');
export const Pie = createPlot<PieConfig>(_Pie, 'Pie');
export const DensityHeatmap = createPlot<DensityHeatmapConfig>(_DensityHeatmap, 'DensityHeatmap');
export const Heatmap = createPlot<HeatmapConfig>(_Heatmap, 'Heatmap');
export const WordCloud = createPlot<WordCloudConfig>(_WordCloud, 'WordCloud');
export const Rose = createPlot<RoseConfig>(_Rose, 'Rose');
export const Funnel = createPlot<FunnelConfig>(_Funnel, 'Funnel');
export const StackedRose = createPlot<StackedRoseConfig>(_StackedRose, 'StackedRose');
export const GroupedRose = createPlot<GroupedRoseConfig>(_GroupedRose, 'GroupedRose');
export const Radar = createPlot<RadarConfig>(_Radar, 'Radar');
export const Liquid = createPlot<LiquidConfig>(_Liquid, 'Liquid');
export const Histogram = createPlot<HistogramConfig>(_Histogram, 'Histogram');
export const Density = createPlot<DensityConfig>(_Density, 'Density');
export const Donut = createPlot<DonutConfig>(_Donut, 'Donut');
export const Waterfall = createPlot<WaterfallConfig>(_Waterfall, 'Waterfall');
export const Scatter = createPlot<ScatterConfig>(_Scatter, 'Scatter');
export const Bubble = createPlot<BubbleConfig>(_Bubble, 'Bubble');
export const Bullet = createPlot<BulletConfig>(_Bullet, 'Bullet');
export const Calendar = createPlot<CalendarConfig>(_Calendar, 'Calendar');
export const Gauge = createPlot<GaugeConfig>(_Gauge, 'Gauge');
export const FanGauge = createPlot<FanGaugeConfig>(_FanGauge, 'FanGauge');
export const MeterGauge = createPlot<MeterGaugeConfig>(_MeterGauge, 'MeterGauge');

